#####################################################################################
#
# Trait Dependent Protracted Speciation Model TraDeRProS with RevBayes
#
# This script runs the the variables to monitor and outputs. 
# 
# authors: Guilherme Azevedo
# Please see and cite Azevedo et al. 2024
#
#####################################################################################
# print to screen
monitors.append( mnScreen(printgen=n_print_screen) )

# Monitor all parameters
monitors.append( mnModel(file=outDirPath+outputPrefix+".model.log", 
                          printgen=n_print_log) )

# monitor rates
monitors.append( mnFile(SpeciationComplRate, stateSpecificRates,
                        filename=outDirPath+outputPrefix+".Rates.log",
                        printgen=n_print_log) )

# monitor reversible jumps hypotheses
monitors.append( mnFile(is_spCompletion_state_dependent,
                        filename=outDirPath+outputPrefix+".RJ.log",
                        printgen=n_print_log) )

# The code below is to be used if the trait transition is being estimated and tested for reversibility with reversible jump
#monitors.append( mnFile(is_troglo_reversible, 
#                        is_spCompletion_state_dependent,
#                        filename=outDirPath+outputPrefix+".RJ.log",
#                        printgen=n_print_log) )

# Monitor tree with speciation events and branch lengths
monitors.append( mnFile(SpeciationBranchTreePoNames, 
                        filename=outDirPath+outputPrefix+".EventsTree.log", 
                        printgen=n_print_tree) )

# Monitor trait evolution
monitors.append( mnFile( tree, filename=outDirPath+outputPrefix+".tre", 
                        printgen=n_print_tree) )

monitors.append( mnCharacterHistorySummary( filename=outDirPath+outputPrefix+".history.txt",
                                            ctmc=trait_evol,
                                            tree=tree,
                                            printgen=n_print_tree ) )

monitors.append(mnCharHistoryNewick(ctmc=trait_evol,
                                    tree=tree,
                                    filename=outDirPath+outputPrefix+".history.nwck", 
                                    printgen=n_print_tree ) )



# Monitor tree with speciation completion branch rates
monitors.append( mnExtNewick(
                 filename=outDirPath+outputPrefix+".SpCompletionRates.trees",
                 isNodeParameter=TRUE,
                 printgen=n_print_tree,
                 separator=TAB,
                 tree=tree,
                 state_branch_rate
                 ))

# Monitor tree with branch speciation events data
monitors.append( mnExtNewick(
                 filename=outDirPath+outputPrefix+".SpeciationEvents.trees",
                 isNodeParameter=TRUE,
                 printgen=n_print_tree,
                 separator=TAB,
                 tree=tree, 
                 branch_speciation_events
                 ) )

# monitor speciation events
monitors.append( mnFile(branch_speciation_events,
                        filename=outDirPath+outputPrefix+".SpeciationEvents.log",
                        printgen=n_print_log) )
